----------------------------------------------------------------  
 VS WORKFLOW with built-in Git and GitHub Pull Request Extension
---------------------------------------------------------------- 
Create repo on github
Clone the Repo to local machine
  SC, Clone
You can make changes to the main branch, or create a new branch
  The workflow for main is:
    Make changes, Stage / Commit, Push
Create new branch
  (create local branch to avoid origin\branch-name tag)
  SC, Branch, Create
Add branch and files to the Remote Repo
  SC Branch, Publish (on github) (or press the cloud icon)
  Same as: SC, Push
Make changes to files
Stage the file for the next Commit
  SC Changes: right-click, Stage Changes
Commit the files
  SC, Commit (or click large check mark)
Push committed changes to github repo
  SC, Push (or click up-arrow icon)
Create Pull request
  SC, Pull
  Merge Pull Request
  Create Merge Commit 
  "Pull request successfully merged."
  Delete branch, local and remote

Make sure the local master is up-to-date
  If changes not in local file explorer:
	  SC, Pull Rebase

https://towardsdatascience.com/a-simple-git-workflow-for-github-beginners-and-everyone-else-87e39b50ee08

-------------------------------------------- 
Common console commands: 
-------------------------------------------- 
 cd - change directory
 mkdir - make directory
 ls - view the files/folders in directory

NOTE: Exit VIM if needed ctrl + c then type :qa! and push enter
NOTE: If file is not in local repo, manually move the file into 
   the correct folder (outside of console)

--------------------------------------------
 Managing your Local Repo
--------------------------------------------
NOTE: If you need to hard reset your local repo to match 
   the remote master use the following commands:
 $ git fetch origin
 $ git reset --hard origin/master
 
Undo the act of committing, leaving everything else intact:
 $ git reset --soft HEAD^:

Undo the act of committing and everything you'd staged, 
but leave the work tree (your files intact):
 $ git reset HEAD^

Completely undo it, throwing away all uncommitted changes,
 resetting everything to the previous commit:
 $ git reset --hard HEAD^
 
--------------------------------------------  
 BEGIN WORKFLOW
-------------------------------------------- 
Clone the Repo to local machine:
 $ git clone https://github.com/user_name/repo_name.git
 
Make sure the local master is up-to-date:
 $ git pull origin main

Create new branch:
 $ git branch branch_name
 
Move to branch:
 $ git checkout branch_name
 
Navigate file structure as needed:
 $ ls 
 $ cd folder_name
 
Add the files to the branch:
 $ git add .
 
Verify file: 
 $ git status
 
Commit the files:
 $ git commit -m "comment"
 
Add branch and files to the Remote Repo:
 $ git push -u origin branch_name
 
Go to the github website to manage pull request and merge. 
 
Switch back to local master so you can delete the local branch:
 $ git checkout main
 
Delete local branch: 
 $ git branch -d branch_name
 OR 
 $ git branch -D branch_name
 
 If you don't want to go to the website, you can merge your branch 
 to the master locally and push the new master to the remote repo:
 
Switch back to master branch:
 $ git checkout main
 
Merge the branch with the local master:
 $ git merge branch_name -m "comment"
 
Push the local master to the remote master:
 $ git push origin main
 
Delete local branch: 
 $ git branch -d branch_name
 OR 
 $ git branch -D branch_name